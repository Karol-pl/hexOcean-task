{"version":3,"sources":["components/validate.js","style/RenderField.style.js","components/RenderField.js","style/RenderDishSelect.style.js","components/RenderDishSelect.js","style/DishForm.style.js","components/DishForm.js","actions/index.js","theme/Theme.js","style/App.style.js","components/App.js","reducers/index.js","index.js"],"names":["validate","formValues","errors","name","preparation_time","type","no_of_slices","diameter","spiciness_scale","bread_slices","StyledInput","styled","input","theme","text","body","ErrorText","span","InputContainer","div","RenderField","label","placeholder","step","min","max","parse","meta","touched","error","StyledSelect","select","dishes","RenderDishSelect","value","map","dish","StyledForm","form","StyledButton","button","DishForm","state","onSubmit","props","createOrder","alert","handleSelectChange","e","setState","target","renderDishDetails","Field","component","parseInt","parseFloat","this","handleSubmit","htmlFor","onChange","Component","formWrapped","reduxForm","onSubmitSuccess","result","dispatch","reset","connect","a","axios","post","headers","response","console","log","payload","GlobalStyle","createGlobalStyle","lightTheme","darkTheme","Title","h1","ThemeButton","TopBar","App","useState","setTheme","isDarkTheme","onClick","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"0NA+BeA,EA/BE,SAACC,GAChB,IAAMC,EAAS,GA2Bf,OA1BKD,EAAWE,OACdD,EAAOC,KAAO,gBAEXF,EAAWG,mBACdF,EAAOE,iBAAmB,4BAEvBH,EAAWI,OACdH,EAAOG,KAAO,sBAGXJ,EAAWK,eACdJ,EAAOI,aAAe,wBAGnBL,EAAWM,WACdL,EAAOK,SAAW,oBAGfN,EAAWO,kBACdN,EAAOM,gBAAkB,4BAGtBP,EAAWQ,eACdP,EAAOO,aAAe,wBAGjBP,G,uBC1BIQ,EAAcC,IAAOC,MAAV,gNAMK,qBAAGC,MAAkBC,QAC5B,qBAAGD,MAAkBE,QAChC,qBAAGF,MAAkBC,QAGnBE,EAAYL,IAAOM,KAAV,2JASTC,EAAiBP,IAAOQ,IAAV,iJ,OCgBZC,EA/BK,SAAC,GAUd,IATLR,EASI,EATJA,MACAS,EAQI,EARJA,MACAC,EAOI,EAPJA,YACAjB,EAMI,EANJA,KACAkB,EAKI,EALJA,KACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MAEI,IADJC,KAAQC,EACJ,EADIA,QAASC,EACb,EADaA,MAEjB,OACE,eAACX,EAAD,WACE,gCAAQG,IACR,gCACE,cAACX,EAAD,2BACME,GADN,IAEEU,YAAaA,EACbjB,KAAMA,EACNkB,KAAMA,EACNC,IAAKA,EACLC,IAAKA,EACLC,MAAOA,KAET,uBACCE,GAAWC,GAAS,cAACb,EAAD,UAAYa,WC9B5BC,EAAenB,IAAOoB,OAAV,gNAMI,qBAAGlB,MAAkBC,QAC5B,qBAAGD,MAAkBE,QAChC,qBAAGF,MAAkBC,QCN1BkB,EAAS,CAAC,QAAS,OAAQ,YAkBlBC,EAhBU,SAAC,GAAyC,IAAvCrB,EAAsC,EAAtCA,MAAsC,IAA/Be,KAAQC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,MAClD,OACE,qCACE,eAACC,EAAD,2BAAkBlB,GAAlB,cACE,wBAAQsB,MAAM,GAAd,8BACCF,EAAOG,KAAI,SAACC,GAAD,OACV,wBAAQF,MAAOE,EAAf,SACGA,GADuBA,UAK7BR,GAAWC,GAAS,cAACb,EAAD,UAAYa,Q,oDCf1BQ,EAAa1B,IAAO2B,KAAV,uKASVC,EAAe5B,IAAO6B,OAAV,okBAGd,qBAAG3B,MAAkBC,QAaD,qBAAGD,MAAkBE,QClB9C0B,E,4MACJC,MAAQ,CACNR,MAAO,I,EAETS,SAAW,SAAC1C,GACV,EAAK2C,MAAMC,YAAY5C,GACvB6C,MAAM,uC,EAGRC,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CACZf,MAAOc,EAAEE,OAAOhB,S,EAIpBiB,kBAAoB,WAClB,IAAQjB,EAAU,EAAKQ,MAAfR,MACR,MAAc,UAAVA,EAEA,qCACE,cAACkB,EAAA,EAAD,CACEC,UAAWjC,EACXf,KAAK,SACLF,KAAK,eACLkB,MAAM,qBACNG,IAAI,IACJC,IAAI,KACJC,MAAO4B,WAGT,cAACF,EAAA,EAAD,CACEC,UAAWjC,EACXf,KAAK,SACLF,KAAK,WACLoB,KAAK,MACLC,IAAI,IACJC,IAAI,KACJJ,MAAM,aACNK,MAAO6B,gBAIM,SAAVrB,EAEP,cAACkB,EAAA,EAAD,CACEC,UAAWjC,EACXf,KAAK,QACLF,KAAK,kBACLqB,IAAI,IACJC,IAAI,KACJF,KAAK,IACLF,MAAM,qBACNK,MAAO4B,WAGQ,aAAVpB,EAEP,cAACkB,EAAA,EAAD,CACEC,UAAWjC,EACXf,KAAK,SACLF,KAAK,eACLqB,IAAI,IACJC,IAAI,KACJJ,MAAM,WACNK,MAAO4B,WAIJ,M,4CAIX,WACE,OACE,eAACjB,EAAD,CAAYM,SAAUa,KAAKZ,MAAMa,aAAaD,KAAKb,UAAnD,UACE,cAACS,EAAA,EAAD,CACEC,UAAWjC,EACXjB,KAAK,OACLE,KAAK,OACLgB,MAAM,SACNC,YAAY,yBAEd,uBAAOoC,QAAQ,YAAf,gCACA,cAACN,EAAA,EAAD,CACEC,UAAWjC,EACXf,KAAK,OACLF,KAAK,mBACLoB,KAAK,MAEP,uBAAOmC,QAAQ,OAAf,yBACA,cAACN,EAAA,EAAD,CACEjD,KAAK,OACLkD,UAAWpB,EACXC,MAAOsB,KAAKd,MAAMR,MAClByB,SAAUH,KAAKT,qBAEhBS,KAAKL,oBACN,cAACZ,EAAD,4B,GAjGeqB,aAyGjBC,EAAcC,YAAU,CAC5BxB,KAAM,WACNtC,WACA+D,gBALkB,SAACC,EAAQC,GAAT,OAAsBA,EAASC,YAAM,eAErCJ,CAIjBrB,GAEY0B,cAAQ,KAAM,CAAEtB,YCzGJ,SAAC5C,GAAD,8CAAgB,WAAOgE,GAAP,eAAAG,EAAA,sEAClBC,IAAMC,KAC3B,iDACArE,EACA,CAAEsE,QAAS,CAAE,eAAgB,sBAJU,OACnCC,EADmC,OAMzCC,QAAQC,IAAIF,GACZP,EAAS,CAAE5D,KAAM,eAAgBsE,QAASH,IAPD,2CAAhB,wDDyGZL,CAA+BN,GEtHjCe,EAAcC,YAAH,sQASN,qBAAGhE,MAAkBE,QAC1B,qBAAGF,MAAkBC,QAKrBgE,EAAa,CACxB/D,KAAM,UACND,KAAM,WAGKiE,EAAY,CACvBhE,KAAM,UACND,KAAM,WCtBKkE,EAAQrE,IAAOsE,GAAV,gHAOLC,EAAcvE,IAAO6B,OAAV,yiBAcO,qBAAG3B,MAAkBC,QAUvCqE,EAASxE,IAAOQ,IAAV,kJCTJiE,EAlBH,WACV,MAA0BC,mBAAS,SAAnC,mBAAOxE,EAAP,KAAcyE,EAAd,KACMC,EAAwB,SAAV1E,EAEpB,OACE,cAAC,IAAD,CAAeA,MAAO0E,EAAcR,EAAYD,EAAhD,SACE,qCACE,cAACF,EAAD,IACA,eAACO,EAAD,WACE,cAACH,EAAD,8BACA,cAACE,EAAD,CAAaM,QAPD,kBAAMF,EAASC,EAAc,QAAU,cASrD,cAAC,EAAD,U,kBCfOE,gBAAgB,CAC7BnD,KAAMoD,O,UCIFC,GAAmBC,OAAOC,sCAAwCC,KAClEC,GAAQC,aAAYC,GAAUN,GAAiBO,aAAgBC,QAErEC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,cAAc,Y","file":"static/js/main.36d9ee5d.chunk.js","sourcesContent":["const validate = (formValues) => {\r\n  const errors = {};\r\n  if (!formValues.name) {\r\n    errors.name = \"Enter a name\";\r\n  }\r\n  if (!formValues.preparation_time) {\r\n    errors.preparation_time = \"Specify preparation time\";\r\n  }\r\n  if (!formValues.type) {\r\n    errors.type = \"Choose a meal type\";\r\n  }\r\n\r\n  if (!formValues.no_of_slices) {\r\n    errors.no_of_slices = \"Add number of slices\";\r\n  }\r\n\r\n  if (!formValues.diameter) {\r\n    errors.diameter = \"Specify diameter\";\r\n  }\r\n\r\n  if (!formValues.spiciness_scale) {\r\n    errors.spiciness_scale = \"Specify spiciness (1-10)\";\r\n  }\r\n\r\n  if (!formValues.bread_slices) {\r\n    errors.bread_slices = \"Add number of slices\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledInput = styled.input`\r\n  text-align: center;\r\n  cursor: pointer;\r\n  border: none;\r\n  padding: 5px 50px;\r\n  margin-bottom: 30px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nexport const ErrorText = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 0;\r\n  padding-bottom: 20px;\r\n  text-align: center;\r\n  color: red;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  StyledInput,\r\n  ErrorText,\r\n  InputContainer,\r\n} from \"../style/RenderField.style\";\r\n\r\nconst RenderField = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  type,\r\n  step,\r\n  min,\r\n  max,\r\n  parse,\r\n  meta: { touched, error },\r\n}) => {\r\n  return (\r\n    <InputContainer>\r\n      <label>{label}</label>\r\n      <div>\r\n        <StyledInput\r\n          {...input}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          step={step}\r\n          min={min}\r\n          max={max}\r\n          parse={parse}\r\n        />\r\n        <br />\r\n        {touched && error && <ErrorText>{error}</ErrorText>}\r\n      </div>\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default RenderField;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSelect = styled.select`\r\n  text-align: center;\r\n  cursor: pointer;\r\n  border: none;\r\n  padding: 5px 50px;\r\n  margin-bottom: 30px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n","import React from \"react\";\r\nimport { StyledSelect } from \"../style/RenderDishSelect.style\";\r\nimport { ErrorText } from \"../style/RenderField.style\";\r\n\r\nconst dishes = [\"pizza\", \"soup\", \"sandwich\"];\r\n\r\nconst RenderDishSelect = ({ input, meta: { touched, error } }) => {\r\n  return (\r\n    <>\r\n      <StyledSelect {...input}>\r\n        <option value=\"\">Select a dish...</option>\r\n        {dishes.map((dish) => (\r\n          <option value={dish} key={dish}>\r\n            {dish}\r\n          </option>\r\n        ))}\r\n      </StyledSelect>\r\n      {touched && error && <ErrorText>{error}</ErrorText>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RenderDishSelect;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-width: 1000px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 5px 20px;\r\n  border: 1px solid transparent;\r\n  color: ${({ theme }) => theme.text};\r\n  font-weight: 400;\r\n  font-size: 1.2rem;\r\n  margin: 20px 0;\r\n  background-image: linear-gradient(\r\n    45deg,\r\n    rgba(1, 215, 49, 1) 1%,\r\n    rgba(0, 80, 154, 1) 100%\r\n  );\r\n  background-origin: border-box;\r\n  background-clip: border-box;\r\n  -webkit-background-clip: border-box;\r\n  -moz-background-clip: border-box;\r\n  box-shadow: 0px 1000px 0px ${({ theme }) => theme.body} inset;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    box-shadow: none;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport validate from \"./validate\";\r\nimport RenderField from \"./RenderField\";\r\nimport RenderDishSelect from \"./RenderDishSelect\";\r\nimport { connect } from \"react-redux\";\r\nimport { createOrder } from \"../actions\";\r\nimport { StyledForm, StyledButton } from \"../style/DishForm.style\";\r\n\r\nclass DishForm extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n  onSubmit = (formValues) => {\r\n    this.props.createOrder(formValues);\r\n    alert(\"Your order was submitted correctly\");\r\n  };\r\n\r\n  handleSelectChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  renderDishDetails = () => {\r\n    const { value } = this.state;\r\n    if (value === \"pizza\") {\r\n      return (\r\n        <>\r\n          <Field\r\n            component={RenderField}\r\n            type=\"number\"\r\n            name=\"no_of_slices\"\r\n            label=\"number of slices: \"\r\n            min=\"1\"\r\n            max=\"12\"\r\n            parse={parseInt}\r\n          />\r\n\r\n          <Field\r\n            component={RenderField}\r\n            type=\"number\"\r\n            name=\"diameter\"\r\n            step=\"0.1\"\r\n            min=\"1\"\r\n            max=\"48\"\r\n            label=\"diameter: \"\r\n            parse={parseFloat}\r\n          />\r\n        </>\r\n      );\r\n    } else if (value === \"soup\") {\r\n      return (\r\n        <Field\r\n          component={RenderField}\r\n          type=\"range\"\r\n          name=\"spiciness_scale\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          step=\"1\"\r\n          label=\"Spiciness (1-10): \"\r\n          parse={parseInt}\r\n        />\r\n      );\r\n    } else if (value === \"sandwich\") {\r\n      return (\r\n        <Field\r\n          component={RenderField}\r\n          type=\"number\"\r\n          name=\"bread_slices\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          label=\"Slices: \"\r\n          parse={parseInt}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <StyledForm onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n        <Field\r\n          component={RenderField}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          label=\"Name: \"\r\n          placeholder=\"state a dish name...\"\r\n        />\r\n        <label htmlFor=\"prep_time\">Preparation Time: </label>\r\n        <Field\r\n          component={RenderField}\r\n          type=\"time\"\r\n          name=\"preparation_time\"\r\n          step=\"1\"\r\n        />\r\n        <label htmlFor=\"type\">Dish type: </label>\r\n        <Field\r\n          name=\"type\"\r\n          component={RenderDishSelect}\r\n          value={this.state.value}\r\n          onChange={this.handleSelectChange}\r\n        />\r\n        {this.renderDishDetails()}\r\n        <StyledButton>Submit</StyledButton>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) => dispatch(reset(\"dishForm\"));\r\n\r\nconst formWrapped = reduxForm({\r\n  form: \"dishForm\",\r\n  validate,\r\n  onSubmitSuccess: afterSubmit,\r\n})(DishForm);\r\n\r\nexport default connect(null, { createOrder })(formWrapped);\r\n","import axios from \"axios\";\r\n\r\n// export const createOrder = (formValues) => (dispatch) => {\r\n//   return axios\r\n//     .post(\"https://frosty-wood-6558.getsandbox.com/dishes\", formValues, {\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//     })\r\n//     .then((response) => {\r\n//       console.log(response);\r\n//     })\r\n//     .catch((error) => {\r\n//       console.log(error.response);\r\n//     });\r\n// };\r\n\r\nexport const createOrder = (formValues) => async (dispatch) => {\r\n  const response = await axios.post(\r\n    \"https://frosty-wood-6558.getsandbox.com/dishes\",\r\n    formValues,\r\n    { headers: { \"Content-Type\": \"application/json\" } }\r\n  );\r\n  console.log(response);\r\n  dispatch({ type: \"CREATE_ORDER\", payload: response });\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\nbody {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    transition: background .2s ease-in-out, color .2s ease-in-out;\r\n}\r\n`;\r\n\r\nexport const lightTheme = {\r\n  body: \"#f1f1f1\",\r\n  text: \"#00284e\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#00284e\",\r\n  text: \"#f1f1f1\",\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2.6rem;\r\n  font-weight: 600;\r\n  padding: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ThemeButton = styled.button`\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 50%;\r\n  border: 2px solid transparent;\r\n  background-image: linear-gradient(\r\n    45deg,\r\n    rgba(1, 215, 49, 1) 1%,\r\n    rgba(0, 80, 154, 1) 100%\r\n  );\r\n  background-origin: border-box;\r\n  background-clip: border-box;\r\n  -webkit-background-clip: border-box;\r\n  -moz-background-clip: border-box;\r\n  box-shadow: 0px 1000px 0px ${({ theme }) => theme.text} inset;\r\n  cursor: pointer;\r\n  transform: scale(1.15);\r\n  transition: transform 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const TopBar = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 10px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport DishForm from \"./DishForm\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle, lightTheme, darkTheme } from \"../theme/Theme\";\r\nimport { ThemeButton, TopBar, Title } from \"../style/App.style\";\r\n\r\nconst App = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const isDarkTheme = theme === \"dark\";\r\n  const toggleTheme = () => setTheme(isDarkTheme ? \"light\" : \"dark\");\r\n  return (\r\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\r\n      <>\r\n        <GlobalStyle />\r\n        <TopBar>\r\n          <Title>Hexocean's form</Title>\r\n          <ThemeButton onClick={toggleTheme}></ThemeButton>\r\n        </TopBar>\r\n        <DishForm />\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}